> django-admin startproject carzone .                   # crea el proyecto "carzone"
> python manage.py runserver                            # corre el servidor web de Django
> python manage.py startapp pages                       # crea una nueva aplicacion dentro del proyecto 'carzone' 

1. registra la nueva aplicacion 'pages.apps.PagesConfig', ubicada en 'pages/apps.py', en el archivo de configuracion 'carzone/settings.py'
2. crear archivo 'pages/urls.py' e incluir la path de inicio con este fichero dentro del archivo carzone/urls.py
3. configurar la llamada vista de inicio dentro del fichero de urls de 'pages/urls.py' - urlpatterns
4. configurar la vista de la pagina de inicio en 'pages/views.py' - def home(request)
5. crear directorio de templates html en 'templates/pages' y crear el fichero 'home.html'
6. registrar el directorio de templates en 'carzone/settings.py' - TEMPLATES = [{'DIRS': ['templates'],}]
7. importar 'pages/views.py' en el fichero de urls 'pages/urls.py'

### configurar repositorio git del proyecto ###

www.github.com
8. crear repositorio 'robersonwm/carzone-gitproject' y ejecutar el primer respaldo del proyecto
    $ git init
    $ git add -A
    $ git commit -m "first commit"
    $ git branch -M main
    $ git remote add origin https://github.com/robersonwm/carzone-gitproject.git
    $ git push -u origin main

    $ git status                            # ver el estatus de respaldo del proyecto (verifica si existen nuevos cambios)
    $ git add -A                            # carga los cambios en el repositorio       
    $ git commit -m "tested git status"     
    $ git push origin main

9. crear fichero '.gitignore' en la raiz del proyecto, visitar 'gitignore.io' en la web y obtener el codigo para un proyecto de Django
10. agregar codigo de 'gitignore.io' en el fichero '.gitignore' y agregar en el codigo los ficheros o directorios  que no se respaldaran en git        